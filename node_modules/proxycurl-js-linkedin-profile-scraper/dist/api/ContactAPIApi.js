"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _DisposableEmail = _interopRequireDefault(require("../model/DisposableEmail"));
var _ExtractionEmailResult = _interopRequireDefault(require("../model/ExtractionEmailResult"));
var _PDLEmailResult = _interopRequireDefault(require("../model/PDLEmailResult"));
var _PDLPhoneNumberResult = _interopRequireDefault(require("../model/PDLPhoneNumberResult"));
var _UrlResult = _interopRequireDefault(require("../model/UrlResult"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
/**
* ContactAPI service.
* @module api/ContactAPIApi
* @version 1.0.0
*/
var ContactAPIApi = /*#__PURE__*/function () {
  /**
  * Constructs a new ContactAPIApi. 
  * @alias module:api/ContactAPIApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function ContactAPIApi(apiClient) {
    _classCallCheck(this, ContactAPIApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Callback function to receive the result of the disposableEmailAddressCheckEndpoint operation.
   * @callback module:api/ContactAPIApi~disposableEmailAddressCheckEndpointCallback
   * @param {String} error Error message, if any.
   * @param {module:model/DisposableEmail} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Cost: 0 credit / request. Given an email address, checks if the email address belongs to a disposable email service.
   * @param {String} email Email address to check
   * @param {module:api/ContactAPIApi~disposableEmailAddressCheckEndpointCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/DisposableEmail}
   */
  _createClass(ContactAPIApi, [{
    key: "disposableEmailAddressCheckEndpoint",
    value: function disposableEmailAddressCheckEndpoint(email, callback) {
      var postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling disposableEmailAddressCheckEndpoint");
      }
      var pathParams = {};
      var queryParams = {
        'email': email
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['BearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _DisposableEmail["default"];
      return this.apiClient.callApi('/api/disposable-email', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the personalContactNumberLookupEndpoint operation.
     * @callback module:api/ContactAPIApi~personalContactNumberLookupEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PDLPhoneNumberResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cost: 1 credit / contact number returned. Given an LinkedIn profile, returns a list of personal contact numbers belonging to this identity.
     * @param {String} linkedinProfileUrl      LinkedIn Profile URL of the person you want to extract personal contact numbers from.     
     * @param {module:api/ContactAPIApi~personalContactNumberLookupEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PDLPhoneNumberResult}
     */
  }, {
    key: "personalContactNumberLookupEndpoint",
    value: function personalContactNumberLookupEndpoint(linkedinProfileUrl, callback) {
      var postBody = null;
      // verify the required parameter 'linkedinProfileUrl' is set
      if (linkedinProfileUrl === undefined || linkedinProfileUrl === null) {
        throw new Error("Missing the required parameter 'linkedinProfileUrl' when calling personalContactNumberLookupEndpoint");
      }
      var pathParams = {};
      var queryParams = {
        'linkedin_profile_url': linkedinProfileUrl
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['BearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _PDLPhoneNumberResult["default"];
      return this.apiClient.callApi('/api/contact-api/personal-contact', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the personalEmailLookupEndpoint operation.
     * @callback module:api/ContactAPIApi~personalEmailLookupEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PDLEmailResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cost: 1 credit / email returned. Given an LinkedIn profile, returns a list of personal emails belonging to this identity. Emails are verified to be deliverable.
     * @param {String} linkedinProfileUrl      LinkedIn Profile URL of the person you want to extract personal email addresses from.     
     * @param {Object} opts Optional parameters
     * @param {String} opts.emailValidation      Perform deliverability validation on each email. (Costs 1 extra credit per email found).          Takes the following values:      * include - Perform email validation.      * exclude (default) - Do not perform email validation.     
     * @param {module:api/ContactAPIApi~personalEmailLookupEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PDLEmailResult}
     */
  }, {
    key: "personalEmailLookupEndpoint",
    value: function personalEmailLookupEndpoint(linkedinProfileUrl, opts, callback) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'linkedinProfileUrl' is set
      if (linkedinProfileUrl === undefined || linkedinProfileUrl === null) {
        throw new Error("Missing the required parameter 'linkedinProfileUrl' when calling personalEmailLookupEndpoint");
      }
      var pathParams = {};
      var queryParams = {
        'email_validation': opts['emailValidation'],
        'linkedin_profile_url': linkedinProfileUrl
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['BearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _PDLEmailResult["default"];
      return this.apiClient.callApi('/api/contact-api/personal-email', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the reverseWorkEmailLookupEndpoint operation.
     * @callback module:api/ContactAPIApi~reverseWorkEmailLookupEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UrlResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cost: 3 credits / successful request. Resolve LinkedIn Profile from a work email address
     * @param {String} workEmail Work email address of the user
     * @param {module:api/ContactAPIApi~reverseWorkEmailLookupEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UrlResult}
     */
  }, {
    key: "reverseWorkEmailLookupEndpoint",
    value: function reverseWorkEmailLookupEndpoint(workEmail, callback) {
      var postBody = null;
      // verify the required parameter 'workEmail' is set
      if (workEmail === undefined || workEmail === null) {
        throw new Error("Missing the required parameter 'workEmail' when calling reverseWorkEmailLookupEndpoint");
      }
      var pathParams = {};
      var queryParams = {
        'work_email': workEmail
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['BearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _UrlResult["default"];
      return this.apiClient.callApi('/api/linkedin/profile/resolve/email', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the workEmailLookupEndpoint operation.
     * @callback module:api/ContactAPIApi~workEmailLookupEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtractionEmailResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cost: 3 credits / request. Lookup work email address of a LinkedIn Person Profile.  Email addresses returned are verified to not be role-based or catch-all emails. Email addresses returned by our API endpoint come with a 95+% deliverability guarantee  **Endpoint behavior**  *This endpoint* **_may not_** *return results immediately.*  If you provided a webhook in your request parameter, our application will call your webhook with the result once. See `Webhook request` below.
     * @param {String} linkedinProfileUrl      Linkedin Profile URL of the person you want to     extract work email address from.     
     * @param {Object} opts Optional parameters
     * @param {String} opts.callbackUrl      Webhook to notify your application when     the request has finished processing.     
     * @param {module:api/ContactAPIApi~workEmailLookupEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtractionEmailResult}
     */
  }, {
    key: "workEmailLookupEndpoint",
    value: function workEmailLookupEndpoint(linkedinProfileUrl, opts, callback) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'linkedinProfileUrl' is set
      if (linkedinProfileUrl === undefined || linkedinProfileUrl === null) {
        throw new Error("Missing the required parameter 'linkedinProfileUrl' when calling workEmailLookupEndpoint");
      }
      var pathParams = {};
      var queryParams = {
        'linkedin_profile_url': linkedinProfileUrl,
        'callback_url': opts['callbackUrl']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['BearerAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _ExtractionEmailResult["default"];
      return this.apiClient.callApi('/api/linkedin/profile/email', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
  }]);
  return ContactAPIApi;
}();
exports["default"] = ContactAPIApi;