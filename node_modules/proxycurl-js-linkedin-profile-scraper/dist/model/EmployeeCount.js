"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
/**
 * The EmployeeCount model module.
 * @module model/EmployeeCount
 * @version 1.0.0
 */
var EmployeeCount = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>EmployeeCount</code>.
   * @alias module:model/EmployeeCount
   */
  function EmployeeCount() {
    _classCallCheck(this, EmployeeCount);
    EmployeeCount.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(EmployeeCount, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>EmployeeCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmployeeCount} obj Optional instance to populate.
     * @return {module:model/EmployeeCount} The populated <code>EmployeeCount</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new EmployeeCount();
        if (data.hasOwnProperty('total_employee')) {
          obj['total_employee'] = _ApiClient["default"].convertToType(data['total_employee'], 'Number');
        }
        if (data.hasOwnProperty('linkedin_employee_count')) {
          obj['linkedin_employee_count'] = _ApiClient["default"].convertToType(data['linkedin_employee_count'], 'Number');
        }
        if (data.hasOwnProperty('linkdb_employee_count')) {
          obj['linkdb_employee_count'] = _ApiClient["default"].convertToType(data['linkdb_employee_count'], 'Number');
        }
        if (data.hasOwnProperty('regression_notice')) {
          obj['regression_notice'] = _ApiClient["default"].convertToType(data['regression_notice'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmployeeCount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmployeeCount</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['regression_notice'] && !(typeof data['regression_notice'] === 'string' || data['regression_notice'] instanceof String)) {
        throw new Error("Expected the field `regression_notice` to be a primitive type in the JSON string but got " + data['regression_notice']);
      }
      return true;
    }
  }]);
  return EmployeeCount;
}();
/**
 * @member {Number} total_employee
 */
EmployeeCount.prototype['total_employee'] = undefined;

/**
 * The scraped value of employee count of this company from it's LinkedIn profile. This value does not respect `employement_status` parameter. It will always return the curent employee count of this company from LinkedIn.
 * @member {Number} linkedin_employee_count
 */
EmployeeCount.prototype['linkedin_employee_count'] = undefined;

/**
 * The total number of employees found in LinkDB for this company. This value is limited by pre-crawled LinkedIn profiles stored in [LinkDB](https://nubela.co/proxycurl/linkdb)
 * @member {Number} linkdb_employee_count
 */
EmployeeCount.prototype['linkdb_employee_count'] = undefined;

/**
 * @member {String} regression_notice
 * @default 'Hello developer, we have renamed `total_employee` key to `linkdb_employee_count` to fix the bad grammar. We have kept `total_employee` for backwards compatibility, so please do not use it as we will remove it down the road. To see which keys are officially supported, refer to our API docs at https://nubela.co/proxycurl/docs#company-api-employee-count-endpoint'
 */
EmployeeCount.prototype['regression_notice'] = 'Hello developer, we have renamed `total_employee` key to `linkdb_employee_count` to fix the bad grammar. We have kept `total_employee` for backwards compatibility, so please do not use it as we will remove it down the road. To see which keys are officially supported, refer to our API docs at https://nubela.co/proxycurl/docs#company-api-employee-count-endpoint';
var _default = EmployeeCount;
exports["default"] = _default;